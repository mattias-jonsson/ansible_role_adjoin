#jinja2: trim_blocks:False
# {{ ansible_managed }}
[sssd]
config_file_version = 2
domains = {{ ansible_role_adjoin_domain }}
services = {{ ansible_role_adjoin_sssd_services | join(', ') | default(ansible_role_adjoin_default_sssd_services | join(', ')) }}

[domain/{{ ansible_role_adjoin_domain }}]
access_provider = ad
ad_access_filter = {% if ansible_role_adjoin_ad_access_filter is defined and ansible_role_adjoin_ad_access_filter | length %}{{ ansible_role_adjoin_ad_access_filter }}{% endif %}
ad_domain = {{ ansible_role_adjoin_domain }}
ad_gpo_access_control = {{ ansible_role_adjoin_gpo_access_control | lower }}  
ad_gpo_ignore_unreadable = True
ad_hostname = {{ inventory_hostname | lower }}
{% if ansible_role_adjoin_adserver is defined and ansible_role_adjoin_adserver is not none %}
ad_server = {{ ansible_role_adjoin_adserver }}
{% endif %}
auth_provider = ad
auto_private_groups = True
cache_credentials = True
chpass_provider = ad
default_shell = /bin/bash
dyndns_auth = GSS-TSIG
dyndns_refresh_interval = 43200
dyndns_ttl = 3600
dyndns_update = True
dyndns_update_ptr = True
fallback_homedir = {{ ansible_role_adjoin_homedir_path }}
id_provider = ad
ignore_group_members = False
krb5_realm = {{ ansible_role_adjoin_domain | upper }}
krb5_store_password_if_offline = True
ldap_group_nesting_level = 2
ldap_groups_use_matching_rule_in_chain = True
ldap_id_mapping = True
ldap_initgroups_use_matching_rule_in_chain = True
ldap_schema = ad
ldap_use_tokengroups = False
{% if ansible_role_adjoin_ldap_user_extra_attrs | length %}
ldap_user_extra_attrs = {{ ansible_role_adjoin_ldap_user_extra_attrs | join(', ') }}
{% endif %}
{% if ansible_role_adjoin_ldap_user_ssh_public_key is not none %}
ldap_user_ssh_public_key = {{ ansible_role_adjoin_ldap_user_ssh_public_key }}
{% endif %}
override_homedir = {% if ansible_role_adjoin_override_homedir %}{{ ansible_role_adjoin_homedir_path }}{% endif %}
realmd_tags = manages-system joined-with-samba
use_fully_qualified_names = False
